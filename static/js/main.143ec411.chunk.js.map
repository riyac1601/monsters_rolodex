{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACG,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,YCHMC,G,MAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAY,YAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCJpBM,G,MAAY,SAAC,GAAD,EAAEC,YAAF,IAAgBC,EAAhB,EAAgBA,aAAhB,OACrB,uBACEZ,UAAY,SACZa,KAAO,SACPF,YAAc,kBACdG,SAAYF,MCuCHG,G,wDAzCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbvC,EAAKC,MAAQ,CACXb,SAAW,GACXU,YAAc,IALJ,E,gEASO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAWkB,S,+BAOlC,IAAD,EAC4BC,KAAKN,MAA/Bb,EADF,EACEA,SAAUU,EADZ,EACYA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAY,MAAjB,UACA,kDACA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgBe,KAAKf,eAEvB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAjCVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.143ec411.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className ='card-container'>\r\n       <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n       <h2> {props.monster.name} </h2> \r\n       <p> {props.monster.email} </p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card' ;\r\nimport './card-list.css';\r\n\r\nexport const CardList = props => (\r\n     <div className = 'card-list'>\r\n         {props.monsters.map(monster => (\r\n            <Card key = {monster.id} monster = {monster}/> \r\n          ))}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.css';\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) => (\r\n    <input \r\n      className = 'search' \r\n      type = 'search' \r\n      placeholder = 'search monsters'\r\n      onChange = {handleChange}\r\n      />\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.jsx';\nimport { SearchBox } from './components/search-box/search-box.jsx';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n\n  handleChange = (e) => {\n     this.setState({searchField : e.target.value})\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return(\n      <div className = 'App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder = 'search monsters'\n        handleChange = {this.handleChange}\n      />\n      <CardList monsters = {filteredMonsters}/>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}